for (int i = 0; i < 30; i+=2){ 		// Loop though 15 messages
	reg2[7:0] = mem[i];				// First half of message
	reg1[7:0] = mem[i+1];				// Second half of message
	
	// reg2 0000 b11 b10 b9
	// reg1 b8 b7 b6 b5 b4 b3 b2 b1
	
	p8 = b11(reg2[2]) xor b10(reg2[1]) xor b9(reg2[0]) xor b8(reg1[7]) xor b7 xor b6 xor b5;
	p4 = b11 xor b10 xor b9 xor b8 xor b4 xor b3 xor b2;
	p2 = b11 xor b10 xor b7 xor b6 xor b4 xor b3 xor b1;
	p1 = b11 xor b9 xor b7 xor b5 xor b4 xor b2 xor b1;
	p0 = p8 xor b4 xor b3 xor b2 xor b1 xor p8 xor p4 xor p2 xor p1;
	
	reg3 = reg2[10:8] + reg1[7:4] + p8				// First half of encoded message
	mem[i] = reg3								// Store first half
	reg3 = reg1[3:1] + p4 + reg1[0] + p2 + p1 + p8	// second half of encoded message
	mem[i+1] = reg3								// Store second half
}

